/*
** EPITECH PROJECT, 2019
** undefined
** File description:
** fonctions.h
*/

#ifndef FONCTIONS_H
#define FONCTIONS_H

#include "lib.h"
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>

#define FAILURE (84)

typedef struct shell_s {
    char **env_shell;
    char **command_shell;
    char **path_env;
} shell_t;

//############################################################################//
//##########################//FONCTIONS PRINCIPALS//##########################//
//############################################################################//
////////////////////////////////////////////////////////////////////////////////
//SHELL/////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int my_sh(shell_t *);
int option_shell(shell_t *);
int shell_option(shell_t *);
////////////////////////////////////////////////////////////////////////////////
//ENV///////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int my_cpy_env(shell_t *, char **);
int malloc_env(shell_t *, char **);
int print_env(shell_t *);
////////////////////////////////////////////////////////////////////////////////
//COMMAND///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int nb_word(shell_t *, char *);
int malloc_command(shell_t *, char *);
int my_command_shell(shell_t *, char *);
int next_spaces(char *);
////////////////////////////////////////////////////////////////////////////////
//PATH//////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int detection_path_env(shell_t *);
int my_path(shell_t *shell, int, int);
////////////////////////////////////////////////////////////////////////////////
//SETENV////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int malloc_stock_not_name(shell_t *);
int my_setenv(shell_t *);
int not_know_name(shell_t *, int, char **, int);
int malloc_env_notknow_name(shell_t *, char **);
int malloc_notknow_name(shell_t *, char **);
int add_name_value_env(shell_t *, int, int);
void add_value(int, shell_t *, char *, int);
int malloc_stock_not_name(shell_t *);
int malloc_stock_name(shell_t *, int);
int malloc_env_know_name(shell_t *, char **, int);
int malloc_know_name(shell_t *, char **, int);
int setenv_error(shell_t *);
int setenv_cmp(shell_t *, int, int);
////////////////////////////////////////////////////////////////////////////////
//UNSETENV/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int malloc_stock_unsetenv(shell_t *, int);
int malloc_env_unsetenv(shell_t *, char **, int);
int malloc_unsetenv(shell_t *, char **, int);
int my_unsetenv(shell_t *);
int unsetenv_error(shell_t *);
////////////////////////////////////////////////////////////////////////////////
//FONCTION PATH/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int malloc_path(shell_t *);
int my_path_env(shell_t *);
int all_fonctions(shell_t *);
void add_command(shell_t *, int, int);
////////////////////////////////////////////////////////////////////////////////
//PROMPT////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int display_prompt(void);
////////////////////////////////////////////////////////////////////////////////
//CD////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int my_cd(shell_t *);
int location_of_oldpwd(shell_t *);
int location_of_home(shell_t *);
int location_of_pwd(shell_t *);
int cd_dash(shell_t *shell, int loc_pwd);
int replace_oldpwd(shell_t *shell, int loc_pwd, int loc_oldpwd);
void change_pwd(shell_t *shell, int loc_pwd, char *path);
////////////////////////////////////////////////////////////////////////////////


#endif